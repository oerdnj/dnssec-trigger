#!0SHELL0
#
# dnssec trigger for OSX

# the network state has changed, obtain a list of DHCP provided DNS servers.
# somehow in /Library/Preferences/SystemConfiguration/
#   com.apple.network.identification.plist  - list of configs seen
#   preferences.plist - list of what is entered in the config panel
prefs="/Library/Preferences/SystemConfiguration/com.apple.network.identification.plist"
tempfile=/tmp/dnssec-trigger-osx.tmp

# active interfaces
ifs=`ifconfig | awk '/^[^ 	:]*:/ { sub(/:.*$/,empty); iface=$0 } /status: active/ { print iface }'`
ifs=`echo $ifs`

# the ssid(s) of the wifi
ssid=`/System/Library/PrivateFrameworks/Apple80211.framework/Versions/A/Resources/airport -I 2>&1 | grep "SSID"`

# and the DNS servers for that
ips=""
for i in $ifs; do
	ips_i=`awk "
# the file has a number of configs with timestamp (for a particular router
# or route).  first timestamped router-indexed-config seems recent.
# Inside that, you have a list of settings (DNS-svrs, interface).
# the last one is the most recent.
/<key>DNS<\/key>/ { svr=\"\" }
/<key>ServerAddresses<\/key>/ { 
	getline x
	while(x !~ /<\/array>/) {
		if(x ~ /<string>/) {
			sub(/^[		]*<string>/,\"\",x)
			sub(/<\/string>/,\"\",x)
			svr= svr \" \" x
		}
		getline x
	}
	#print \"set svr to \" svr
}
/<key>InterfaceName<\/key>/ { 
	getline x
	if(x ~ /<string>$i<\/string>/ && svr != \" 127.0.0.1\") {
		#print \"  got server \" svr
		res=svr
	}
	#sub(/^[		]*<string>/,\"\",x)
	#sub(/<\/string>/,\"\",x)
	#print \"iface \" x
}
/<key>Timestamp<\/key>/ {
	getline x
	#print \"timestamp \" x
	if(res != \"\") {
		print res
		exit
	}
}
" < $prefs`
	ips="$ips $ips_i"
done
# fix whitespace
ips=`echo $ips`

# see if it has changed
if test -f $tempfile; then
	if echo "$ifs $ips $ssid" | diff $tempfile - >/dev/null; then
		# it is equal
		logger "dnssec-trigger(osx) no-change $ifs DNS $ips"
		exit 0
	fi
fi
# store on file
echo "$ifs $ips $ssid" > $tempfile

logger "dnssec-trigger(osx) detected $ifs DNS $ips"
0sbindir0/dnssec-trigger-control submit "$ips"
exit 0
