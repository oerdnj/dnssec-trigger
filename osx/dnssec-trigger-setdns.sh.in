#!0SHELL0
# dnssec-trigger shell script to set DNS servers on OSX.
# must run as root.
#
# usage:  set example.com 192.0.2.1 192.0.2.2

cmd="$1"
shift
if test "$cmd" = "set"; then
	domain="$1"
	shift
	# remaining arguments are the servers to set
	servers="$*"
	logger "dnssec-trigger-setdns to $domain and $servers"
else
	if test "$cmd" = "uninit"; then
		logger "dnssec-trigger-setdns uninit dns override"
	else
		echo "bad command: set domain [ip ..] | uninit"
		exit 1
	fi
	domain=""
	servers=""
fi

# sets the DNS settings via scutil.
function with_scutil () {
# find the ids of the networkservices that are running or important
# output like: State:/Network/Service/AB5ED934-29E2-4E1B-BEDC-9167410B49A0/DNS
ids=`echo "list State:/Network/Service/[^/]+/DNS" | scutil | sed -e "s?^.* = ??"`
# set the nameservers of all those entries (and the global one)
for i in $ids State:/Network/Global/DNS; do
	scutil <<END
open
d.init
d.add ServerAddresses * $servers
d.add DomainName $domain
set $i
quit
END
done
}

# set the DNS settings via networksetup
nws="networksetup"
if test -z "$domain"; then
	domain="empty"
fi
if test -z "$servers"; then
	servers="empty"
fi
$nws -listallnetworkservices 2>/dev/null | grep -v '*' | while read x ; do
	#echo $x
	$nws -setsearchdomains "$x" $domain
	$nws -setdnsservers "$x" "$servers"
done

